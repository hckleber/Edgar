/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package composicoestcpplanilha.Janelas;

import composicoestcpplanilha.Classes.AtualizarID;
import composicoestcpplanilha.Classes.Composicoes;
import composicoestcpplanilha.Classes.ConexaoCSV;
import composicoestcpplanilha.Classes.Constantes;
import composicoestcpplanilha.Classes.CriarTabela;
import composicoestcpplanilha.Classes.DespesasDiretas;
import composicoestcpplanilha.Classes.Quantitativos;
import composicoestcpplanilha.Suporte.LerXlsx;
import composicoestcpplanilha.Suporte.OrdenarLista;
import composicoestcpplanilha.Suporte.Xls;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.IOException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Comparator;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import jdk.nashorn.internal.ir.BreakNode;
import jdk.nashorn.internal.ir.ContinueNode;
import jxl.write.WriteException;

/**
 *
 * @author Milene
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    private String[] colunasTabelaPrincipal = {"Item", "Código", "Serviço", "Unid", "Qtd"};
    private String[] colunasTabelaSecundario = {"ITEM", "CÓDIGO", "TIPO", "DESCRIÇÃO", "UNID.", "QUANT.TOTAL", "CONSUMO TOTAL", "PRODUÇÃO", "PROD*FATOR",
        "CUSTO TOTAL", "CONSUMO", "HOMEM-HORA", "HORA-MAQUINA", "SERV.TERC.", "CUSTO", "MATERIAL", "HOMEM-HORA",
        "HORA-MAQUINA", "SERV.TERC."};
    private ArrayList<String> arquivoSaida = new ArrayList<>();
    private boolean alteracaoSecundario = false;

    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        initComponents();
        
        jMenu1.setVisible(false);

//        mudarIcone();
        // Preenche jcomboBox com a lista Quantitativos
        ConexaoCSV arquivo1 = new ConexaoCSV(Constantes.QUANTITATIVOS);
        ArrayList <String> vetor = arquivo1.readColunaCsvFile(2);
        vetor.remove(0);
        Collections.sort(vetor);
        vetor.add(0, "Serviços");
        cboxServico.setModel(new DefaultComboBoxModel(new Vector(vetor)));
        
        
        
        
        
        
        
        
        

        // Carregar a tabela da aba Serviço Principal
        ConexaoCSV despesasDiretas = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
        CriarTabela tabelaServicoPrincipal = new CriarTabela(tbServPrincipal, colunasTabelaPrincipal, despesasDiretas);
        tabelaServicoPrincipal.criarTabelaServicoPrimario();

        // Atualiza jcombobox primario da Aba2
        ConexaoCSV arquivo2 = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
        cboxServPrincipal.setModel(new DefaultComboBoxModel(new Vector(arquivo2.readColunaCsvFile(3))));

        //Atualiza jcombobox secundario da Aba2
        ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
        CriarTabela tabelaServicoSecundario = new CriarTabela(tbSecundario, colunasTabelaSecundario, despesasDiretass);
        tabelaServicoSecundario.criarTabelaServicoSecundario("");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuBar2 = new javax.swing.JMenuBar();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        tabPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        btnADD = new javax.swing.JButton();
        btnTrocar = new javax.swing.JButton();
        btnRemoveAll = new javax.swing.JButton();
        cboxServico = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtQtdServico = new javax.swing.JFormattedTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbServPrincipal = new javax.swing.JTable();
        btnExcluir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        cboxServSecundario = new javax.swing.JComboBox<>();
        btnInserirSec = new javax.swing.JButton();
        btnCriarSaida = new javax.swing.JButton();
        btnTrocarSec = new javax.swing.JButton();
        cboxTipo = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        cboxServPrincipal = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        JLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtProducao = new javax.swing.JFormattedTextField();
        txtProd = new javax.swing.JFormattedTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSecundario = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtQtd = new javax.swing.JFormattedTextField();
        btnExcluirSec = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenu5 = new javax.swing.JMenu();

        jMenu3.setText("File");
        jMenuBar2.add(jMenu3);

        jMenu4.setText("Edit");
        jMenuBar2.add(jMenu4);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Sistema de Orçamento de Obra");

        tabPane1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabPane1MouseClicked(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnADD.setText("Inserir");
        btnADD.setMaximumSize(new java.awt.Dimension(66, 25));
        btnADD.setMinimumSize(new java.awt.Dimension(66, 25));
        btnADD.setPreferredSize(new java.awt.Dimension(66, 25));
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnTrocar.setText("Trocar");
        btnTrocar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrocarActionPerformed(evt);
            }
        });

        btnRemoveAll.setText("Limpar");
        btnRemoveAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAllActionPerformed(evt);
            }
        });

        cboxServico.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4", "A", "B", "C" }));

        jLabel2.setText("Serviço");

        jLabel3.setText("Qtd.");

        txtQtdServico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#"))));
        txtQtdServico.setText("0");

        jScrollPane1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbServPrincipal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbServPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbServPrincipalMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbServPrincipal);

        btnExcluir.setText("Excluir");
        btnExcluir.setEnabled(false);
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cboxServico, javax.swing.GroupLayout.PREFERRED_SIZE, 1072, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtQtdServico, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 45, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnTrocar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRemoveAll)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnADD, btnExcluir, btnRemoveAll, btnTrocar});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnADD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluir))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRemoveAll)
                            .addComponent(btnTrocar)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboxServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQtdServico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(48, 48, 48)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 347, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnADD, btnExcluir, btnRemoveAll, btnTrocar});

        tabPane1.addTab("Serviço Principal", jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnInserirSec.setText("Inserir");
        btnInserirSec.setMaximumSize(new java.awt.Dimension(66, 25));
        btnInserirSec.setMinimumSize(new java.awt.Dimension(66, 25));
        btnInserirSec.setPreferredSize(new java.awt.Dimension(66, 25));
        btnInserirSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirSecActionPerformed(evt);
            }
        });

        btnCriarSaida.setText("Criar");
        btnCriarSaida.setMaximumSize(new java.awt.Dimension(66, 25));
        btnCriarSaida.setMinimumSize(new java.awt.Dimension(66, 25));
        btnCriarSaida.setPreferredSize(new java.awt.Dimension(66, 25));
        btnCriarSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCriarSaidaActionPerformed(evt);
            }
        });

        btnTrocarSec.setText("Trocar");
        btnTrocarSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrocarSecActionPerformed(evt);
            }
        });

        cboxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "--TIPO--", "EQ", "MAT", "MOD", "SET/MOE" }));
        cboxTipo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxTipoActionPerformed(evt);
            }
        });

        jLabel1.setText("Tipo");

        jLabel4.setText("Serviço Secundário");

        cboxServPrincipal.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboxServPrincipal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboxServPrincipalActionPerformed(evt);
            }
        });

        jLabel5.setText("Serviço Principal");

        JLabel7.setText("Produção:");

        jLabel6.setText("PROD:");

        txtProducao.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.000000"))));
        txtProducao.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProducao.setText("1,00");
        txtProducao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProducaoActionPerformed(evt);
            }
        });

        txtProd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtProd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtProd.setText("1,00");

        jScrollPane2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tbSecundario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbSecundario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbSecundarioMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbSecundario);

        jLabel7.setText("Qtd.:");

        txtQtd.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));
        txtQtd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtQtd.setText("1,00");
        txtQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdActionPerformed(evt);
            }
        });

        btnExcluirSec.setText("Excluir");
        btnExcluirSec.setEnabled(false);
        btnExcluirSec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirSecActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(JLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtProducao, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(450, 450, 450))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel5))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cboxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(8, 8, 8)
                                                .addComponent(jLabel1)))
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(26, 26, 26)
                                                .addComponent(jLabel4))
                                            .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addComponent(cboxServSecundario, javax.swing.GroupLayout.PREFERRED_SIZE, 1120, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addComponent(cboxServPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, 1210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTrocarSec, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnExcluirSec, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInserirSec, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCriarSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCriarSaida, btnExcluirSec, btnInserirSec, btnTrocarSec});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(JLabel7)
                            .addComponent(txtProducao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtProd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(txtQtd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel4))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cboxServSecundario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboxTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboxServPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(btnInserirSec, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirSec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTrocarSec)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCriarSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 320, Short.MAX_VALUE)
                .addGap(29, 29, 29))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCriarSaida, btnExcluirSec, btnInserirSec, btnTrocarSec});

        tabPane1.addTab("Serviço Secundário", jPanel2);

        jMenu1.setText("Arquivo");
        jMenu1.setEnabled(false);

        jMenuItem2.setText("Abrir Orçamento");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem2);

        jMenuItem1.setText("Salvar Orçamento");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Sair");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);
        jMenu1.add(jSeparator1);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Sobre");
        jMenu5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenu5MouseClicked(evt);
            }
        });
        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void btnInserirSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirSecActionPerformed
        // TODO add your handling code here:
        float prod;
        float producao;
        Double qtd;

        if (((String) cboxServPrincipal.getSelectedItem()).toUpperCase().equals("DESCRIÇÃO")
                || (cboxServSecundario.getSelectedItem() == null)
                || txtProd.getText().isEmpty() == true
                || txtProducao.getText().isEmpty() == true
                || ((String) cboxServSecundario.getSelectedItem()).toUpperCase().equals("EQUIPAMENTOS")
                || ((String) cboxServSecundario.getSelectedItem()).toUpperCase().equals("MATERIAIS")
                || ((String) cboxServSecundario.getSelectedItem()).toUpperCase().equals("PROFISSÃO")
                || ((String) cboxServSecundario.getSelectedItem()).toUpperCase().equals("SERVIÇOS CONTRATADOS")) {
            JOptionPane.showMessageDialog(this, "Os campos \"PROD\", \"Produção\", \"SERVIÇO PRINCIPAL\" e \"SERVIÇO SECUNDÁRIO\" devem ser preenchidos");
        } else {
            //Pegar valores de QTD, PROD e Produção do txtBox
            prod = Float.valueOf(txtProd.getText().replace(",", "."));
            producao = Float.valueOf(txtProducao.getText().replace(",", "."));
            qtd = Double.valueOf(txtQtd.getText().replace(",", "."));

            //Preparar para pegar ID da lista (arquivo) Despesas_Diretas_p
            String[] servicoPrincipal;
            String item;
            ConexaoCSV despesasDiretasp = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            servicoPrincipal = despesasDiretasp.retornarLinha((String) cboxServPrincipal.getSelectedItem()).split(";");
            item = tbSecundario.getValueAt(tbSecundario.getRowCount() - 1, 0).toString();

            //Pegar linha completa do Serviço Secundário
            String linhaServicoSecundario;
            DespesasDiretas despesasDiretas = new DespesasDiretas(producao, prod);
            linhaServicoSecundario = despesasDiretas.lerLinhaServicoSecundario(cboxTipo.getSelectedItem().toString(), cboxServSecundario.getSelectedItem().toString());

            System.out.println(linhaServicoSecundario);

            //Criar string para escrever no arquivo Despesas_Diretas_s
            String dadosEscrita;
            dadosEscrita = despesasDiretas.criarDadosEscrita(cboxTipo.getSelectedItem().toString(), item, servicoPrincipal, linhaServicoSecundario, qtd);

            ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);

            despesasDiretass.adicionarSubItem(dadosEscrita);

            String id;
            id = despesasDiretasp.retornarLinha(cboxServPrincipal.getSelectedItem().toString());

            CriarTabela tabelaServicoSecundario = new CriarTabela(tbSecundario, colunasTabelaSecundario, despesasDiretass);
            tabelaServicoSecundario.criarTabelaServicoSecundario(id);

            this.alteracaoSecundario = true;
        }

    }//GEN-LAST:event_btnInserirSecActionPerformed

    private void cboxTipoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxTipoActionPerformed
        // TODO add your handling code here:
        ArrayList<String> listaServicos;

        DespesasDiretas a = new DespesasDiretas();

        listaServicos = a.preencherListBox((String) cboxTipo.getSelectedItem());

        if (listaServicos == null) {
            cboxServSecundario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{}));
        } else {
            cboxServSecundario.setModel(new DefaultComboBoxModel(new Vector(listaServicos)));
        }

    }//GEN-LAST:event_cboxTipoActionPerformed

    private void cboxServPrincipalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboxServPrincipalActionPerformed
        // TODO add your handling code here:
        btnExcluirSec.setEnabled(false);

        String id;
        id = cboxServPrincipal.getSelectedItem().toString();

        if (id.equals("DESCRIÇÃO")) {
            return;
        } else {
            ConexaoCSV despesasDiretasp = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            id = despesasDiretasp.retornarLinha(cboxServPrincipal.getSelectedItem().toString());
        }

        ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);

        CriarTabela tabelaServicoSecundario = new CriarTabela(tbSecundario, colunasTabelaSecundario, despesasDiretass);
        tabelaServicoSecundario.criarTabelaServicoSecundario(id);
    }//GEN-LAST:event_cboxServPrincipalActionPerformed

    private void txtProducaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProducaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProducaoActionPerformed

    private void tabPane1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabPane1MouseClicked

//        int idAba = tabPane1.getSelectedIndex();

//        switch (idAba) {
//            case 0:
//                if (alteracaoSecundario) {
//                    System.out.println("aqui");
//                    ConexaoCSV principal = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
//                    ConexaoCSV secundario = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
//                    Composicoes comp = new Composicoes(principal, secundario);
//
//                    OrdenarLista.Ordenar(comp.criarComposicoes());
//
//                    //Atualiza arquivo Despesas_Diretas_p
//                    principal.writeCsvFile(comp.AtualizarArquivoServPrincipal());
//
//                    // Carregar a tabela da aba Serviço Principal
//                    ConexaoCSV despesasDiretas = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
//                    CriarTabela tabelaServicoPrincipal = new CriarTabela(tbServPrincipal, colunasTabelaPrincipal, despesasDiretas);
//                    tabelaServicoPrincipal.criarTabelaServicoPrimario();
//                }
//                break;

//            case 1:

                txtProd.setText("1,00");
                txtProducao.setText("1,00");
                //txtQtd.setText("1,00");
                cboxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"--TIPO--", "EQ", "MAT", "MOD", "SET/MOE"}));

                // Atualiza jcombobox primario da Aba2
                ConexaoCSV arquivo = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
                cboxServPrincipal.setModel(new DefaultComboBoxModel(new Vector(arquivo.readColunaCsvFile(3))));

                //Atualiza jcombobox secundario da Aba2
                if (cboxTipo.getSelectedItem().equals("--TIPO--")) {
                    cboxServSecundario.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{null}));

                } else {
                    ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
                    CriarTabela tabelaServicoSecundario = new CriarTabela(tbSecundario, colunasTabelaSecundario, despesasDiretass);
                    tabelaServicoSecundario.criarTabelaServicoSecundario("");

                    txtProd.setText("1,00");
                    txtProducao.setText("1,00");
                    cboxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[]{"--TIPO--", "EQ", "MAT", "MOD", "SET/MOE"}));

                }
//                break;

//        }

    }//GEN-LAST:event_tabPane1MouseClicked

    private void btnCriarSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCriarSaidaActionPerformed
        // Cria o arquivo Composições
        
        JanelaCriarExcel janelaCriarExcel = new JanelaCriarExcel();
        
        janelaCriarExcel.setLocationRelativeTo(null);
        janelaCriarExcel.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        janelaCriarExcel.setVisible(true);
        
        janelaCriarExcel.setjLabel1("Criando planilha...", true);
        
        ConexaoCSV principal = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
        ConexaoCSV secundario = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);

        Composicoes comp = new Composicoes(principal, secundario);

        //Criar e Ordena a lista de ArrayList
        OrdenarLista.Ordenar(comp.criarComposicoes(), true);

        //Gera o .CSV de saída
        ConexaoCSV arquivoComposicao = new ConexaoCSV(Constantes.COMPOSICOES);
        arquivoComposicao.writeCsvFile(comp.getListaSaidaString(), true);

        //Atualiza arquivo Despesas_Diretas_p
        principal.writeCsvFile(comp.AtualizarArquivoServPrincipal());

        //Gera o .xls de saída
        Xls geraPlan = new Xls("PLANILHA_GERADA");

        System.out.println("Criando planilha...");
        geraPlan.CriarPlanilha();

        janelaCriarExcel.setjLabel2("Inserindo dados na planilha...", true);
        
        System.out.println("Inserindo dados na planilha...");
        try {
            geraPlan.escreverPlan(comp.getListaSaida(), "Composicoes");
            geraPlan.escreverPlan(comp.CriarPrecos(), "Planilha_de_Precos");
        } catch (WriteException ex) {
            Logger.getLogger(JanelaPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

        

        System.out.println("Executado!!");
        
        janelaCriarExcel.setjLabel3("Executado!!", true);
        
        janelaCriarExcel.setjButton1(true);


    }//GEN-LAST:event_btnCriarSaidaActionPerformed

    private void jMenu5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenu5MouseClicked
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Sistema criado e desenvolvido por Kleber Hochwart.\n Dúvidas e solicitações entrar em contato por hc.kleber@gmail.com");
    }//GEN-LAST:event_jMenu5MouseClicked

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btnRemoveAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAllActionPerformed
        // TODO add your handling code here:
        ConexaoCSV despesasDiretasp = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
        despesasDiretasp.clearAll();

        ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
        despesasDiretass.clearAll();

        // Carregar a tabela da aba Serviço Principal
        CriarTabela tabelaServicoPrincipal = new CriarTabela(tbServPrincipal, colunasTabelaPrincipal, despesasDiretasp);
        tabelaServicoPrincipal.criarTabelaServicoPrimario();

    }//GEN-LAST:event_btnRemoveAllActionPerformed

    private void btnTrocarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrocarActionPerformed
        // BOTÃO ALTERAR

        new JanelaTrocaIdPrincipal(this, tbServPrincipal, colunasTabelaPrincipal).setVisible(true);

        this.setEnabled(false);

    }//GEN-LAST:event_btnTrocarActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:

        String servico;
        Double qtd;
        servico = (String) cboxServico.getSelectedItem();
        qtd = Double.parseDouble(txtQtdServico.getText());

        if (servico.toUpperCase().equals("SERVIÇOS")) {
            JOptionPane.showMessageDialog(null, "Selecione um serviço para inserir!");

        } else {

            ArrayList<String> bloco = new ArrayList(new ConexaoCSV(Constantes.PRINCIPAL).retornarBloco(servico));

            // Insere a primeira linha do bloco no arquivo Dispesas_Diretas_p
            Quantitativos dispDiretP = new Quantitativos(bloco.get(0), qtd);

            //Pegar linha completa do Serviço Secundário
            long prod = 1l;
            long producao = 1l;
            int id = dispDiretP.getLastID() + 1;
            String prodHora[] = bloco.get(0).split(";");
            float prodHoraEquipe = Float.valueOf(prodHora[15].replace(",", "."));

            Double material = 0D;
            Double hh = 0D;
            Double hm = 0D;
            Double servTec = 0D;
            Double custoTotal = 0D;
            System.out.println(bloco.size());
            for (int i = 1; i < bloco.size(); i++) {
                String item;
                String dadosEscrita;
                String dadosEscritaCalculo[];

                DespesasDiretas despesasDiretas = new DespesasDiretas(producao, prod);

                item = Integer.toString(id) + "." + Integer.toString(i);

                dadosEscrita = despesasDiretas.criarDadosEscrita("interno", item, bloco.get(i), qtd, prodHoraEquipe);

                ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);

                despesasDiretass.adicionarSubItem(dadosEscrita);

                dadosEscritaCalculo = dadosEscrita.split(";");

                switch (dadosEscritaCalculo.length) {
                    case 19:
                        if (!dadosEscritaCalculo[18].isEmpty()) {
                            material = material + Float.parseFloat(dadosEscritaCalculo[18].replace(",", "."));
                        }
                        break;
                    case 20:
                        if (!dadosEscritaCalculo[18].isEmpty()) {
                            material = material + Float.parseFloat(dadosEscritaCalculo[18].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[19].isEmpty()) {
                            hh = hh + Float.parseFloat(dadosEscritaCalculo[19].replace(",", "."));
                        }
                        break;
                    case 21:
                        if (!dadosEscritaCalculo[18].isEmpty()) {
                            material = material + Float.parseFloat(dadosEscritaCalculo[18].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[19].isEmpty()) {
                            hh = hh + Float.parseFloat(dadosEscritaCalculo[19].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[20].isEmpty()) {
                            hm = hm + Float.parseFloat(dadosEscritaCalculo[20].replace(",", "."));
                        }
                        break;
                    case 22:
                        if (!dadosEscritaCalculo[18].isEmpty()) {
                            material = material + Float.parseFloat(dadosEscritaCalculo[18].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[19].isEmpty()) {
                            hh = hh + Float.parseFloat(dadosEscritaCalculo[19].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[20].isEmpty()) {
                            hm = hm + Float.parseFloat(dadosEscritaCalculo[20].replace(",", "."));
                        }
                        if (!dadosEscritaCalculo[21].isEmpty()) {
                            servTec = servTec + Float.parseFloat(dadosEscritaCalculo[21].replace(",", "."));
                        }
                        break;
                }
            }

            custoTotal = material + hh + hm + servTec;

            dispDiretP.inserirLinhaQuantitativo();

            // Carregar a tabela da aba Serviço Principal
            ConexaoCSV despesasDiretas = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            CriarTabela tabelaServicoPrincipal = new CriarTabela(tbServPrincipal, colunasTabelaPrincipal, despesasDiretas);
            tabelaServicoPrincipal.criarTabelaServicoPrimario();

        }
    }//GEN-LAST:event_btnADDActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // TODO add your handling code here:

        try {
            ConexaoCSV principal = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            ConexaoCSV secundario = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
            ArrayList<String> listPrincipal = principal.readCsvFile();
            ArrayList<String> listSecundaria = secundario.readCsvFile();
            String atualLinha;
            String proxLinha;
            int idRemovido;

            int linha = tbServPrincipal.getSelectedRow() + 1;

            idRemovido = Integer.parseInt(listPrincipal.get(linha).substring(0, listPrincipal.get(linha).indexOf(".")));

            int var = 0;
            for (int i = linha; i < listPrincipal.size(); i++) {
                int id = Integer.parseInt(listPrincipal.get(i).substring(0, listPrincipal.get(i).indexOf(".")));
                if (id > idRemovido) {
                    atualLinha = listPrincipal.get(i);
                    proxLinha = Math.addExact(idRemovido, var) + ".0" + atualLinha.substring(atualLinha.indexOf(";"));
                    var++;
                    listPrincipal.set(i, proxLinha);
                }
            }
            listPrincipal.remove(linha);

            ConexaoCSV arquivoP = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            arquivoP.writeCsvFile(listPrincipal);

            String cabecalho = listSecundaria.get(0);
            listSecundaria.remove(0);

            OrdenarLista.Ordenar(listSecundaria, false);

            listSecundaria.add(0, cabecalho);

            ArrayList<Integer> excluidos = new ArrayList();

            for (int i = 1; i < listSecundaria.size(); i++) {
                int id = Integer.parseInt(listSecundaria.get(i).substring(0, listSecundaria.get(i).indexOf(".")));

                if (id > idRemovido) {
                    int idAnt = Integer.parseInt(listSecundaria.get(i).substring(0, listSecundaria.get(i).indexOf("."))) - 1;
                    String nova = idAnt + listSecundaria.get(i).substring(listSecundaria.get(i).indexOf("."), listSecundaria.get(i).length());
                    listSecundaria.set(i, nova);
                } else if (id == idRemovido) {
                    excluidos.add(i);
                }
            }

            for (int a = excluidos.size() - 1; a >= 0; a--) {
                int x = excluidos.get(a);
                listSecundaria.remove(x);
            }

            ConexaoCSV arquivoS = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
            arquivoS.writeCsvFile(listSecundaria);

            // Carregar a tabela da aba Serviço Principal
            ConexaoCSV despesasDiretas = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            CriarTabela tabelaServicoPrincipal = new CriarTabela(tbServPrincipal, colunasTabelaPrincipal, despesasDiretas);
            tabelaServicoPrincipal.criarTabelaServicoPrimario();

            btnExcluir.setEnabled(false);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Selecione um item!");
            btnExcluir.setEnabled(false);
        }


    }//GEN-LAST:event_btnExcluirActionPerformed

    private void tbServPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbServPrincipalMouseClicked
        // TODO add your handling code here:

        btnExcluir.setEnabled(true);
    }//GEN-LAST:event_tbServPrincipalMouseClicked

    private void txtQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdActionPerformed

    private void btnTrocarSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrocarSecActionPerformed
        // BOTÃO ALTERAR

        if (((String) cboxServPrincipal.getSelectedItem()).toUpperCase().equals("DESCRIÇÃO")) {
            JOptionPane.showMessageDialog(this, "Selecione um item no campo \"Serviço Principal\"");
        } else {
            String a = tbSecundario.getValueAt(0, 0).toString().substring(0, tbSecundario.getValueAt(0, 0).toString().indexOf("."));

            JanelaTrocaIdPrincipal JanelaTrocaIdPrincipal2 = new JanelaTrocaIdPrincipal(this, tbServPrincipal, colunasTabelaPrincipal);
            JanelaTrocaIdPrincipal2.setVisible(true);
            JanelaTrocaIdPrincipal2.setIdPrinc(a);

            this.setEnabled(false);
        }
    }//GEN-LAST:event_btnTrocarSecActionPerformed

    private void btnExcluirSecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirSecActionPerformed
        // TODO add your handling code here:
        ConexaoCSV secundario = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
        ArrayList<String> listSecundaria = secundario.readCsvFile();
        String linha = tbSecundario.getValueAt(tbSecundario.getSelectedRow(), 0).toString();;

        for (int i = 1; i < tbSecundario.getColumnCount(); i++) {
            linha = linha + ";" + tbSecundario.getValueAt(tbSecundario.getSelectedRow(), i).toString();        //tbSecundario.getSelectedRows().toString();
        }

        String item = linha.substring(0, linha.indexOf(";"));
        String subitem = item.substring(item.indexOf(".") + 1);

        OrdenarLista.Ordenar(listSecundaria, false);

        for (int i = listSecundaria.size() - 1; i > 0; i--) {
            String a = listSecundaria.get(i);
            if (a.substring(0, a.indexOf(".")).equals(item.substring(0, item.indexOf(".")))) {
                if (Integer.parseInt(a.substring(a.indexOf(".") + 1, a.indexOf(";")))
                        == Integer.parseInt(subitem)) {
                    listSecundaria.remove(i);
                } else if (Integer.parseInt(a.substring(a.indexOf(".") + 1, a.indexOf(";")))
                        > Integer.parseInt(subitem)) {
                    a = a.substring(0, a.indexOf(".") + 1) + Math.subtractExact(Integer.parseInt(a.substring(a.indexOf(".") + 1, a.indexOf(";"))), 1) + ";" + a.substring(a.indexOf(";") + 1);
                    listSecundaria.set(i, a);
                } else {
                    i = 0;
                }
            }
        }

        secundario.writeCsvFile(listSecundaria);

        //Atualizar tabela na tela
        String id;
        id = cboxServPrincipal.getSelectedItem().toString();
        if (id.equals("DESCRIÇÃO")) {
            return;
        } else {
            ConexaoCSV despesasDiretasp = new ConexaoCSV(Constantes.DESPESAS_DIRETASP);
            id = despesasDiretasp.retornarLinha(cboxServPrincipal.getSelectedItem().toString());
        }
        ConexaoCSV despesasDiretass = new ConexaoCSV(Constantes.DESPESAS_DIRETASS);
        CriarTabela tabelaServicoSecundario = new CriarTabela(tbSecundario, colunasTabelaSecundario, despesasDiretass);
        tabelaServicoSecundario.criarTabelaServicoSecundario(id);
        //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

        btnExcluirSec.setEnabled(false);
    }//GEN-LAST:event_btnExcluirSecActionPerformed

    private void tbSecundarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSecundarioMouseClicked
        // TODO add your handling code here:
        btnExcluirSec.setEnabled(true);
    }//GEN-LAST:event_tbSecundarioMouseClicked

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel JLabel7;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnCriarSaida;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnExcluirSec;
    private javax.swing.JButton btnInserirSec;
    private javax.swing.JButton btnRemoveAll;
    private javax.swing.JButton btnTrocar;
    private javax.swing.JButton btnTrocarSec;
    private javax.swing.JComboBox<String> cboxServPrincipal;
    private javax.swing.JComboBox<String> cboxServSecundario;
    private javax.swing.JComboBox<String> cboxServico;
    private javax.swing.JComboBox<String> cboxTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTabbedPane tabPane1;
    private javax.swing.JTable tbSecundario;
    private javax.swing.JTable tbServPrincipal;
    private javax.swing.JFormattedTextField txtProd;
    private javax.swing.JFormattedTextField txtProducao;
    private javax.swing.JFormattedTextField txtQtd;
    private javax.swing.JFormattedTextField txtQtdServico;
    // End of variables declaration//GEN-END:variables

//    private void mudarIcone() {
//        setIconImage(Toolkit.getDefaultToolkit().getImage(getClass().getResource("orcamentoicon.png")));
//    }
}
